/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

&mt {
    bindings =
        <&mo>,
        <&kp>;
};

/ {
    macros {
        split_V: split_V {
            compatible = "zmk,behavior-macro";
            label = "SPLIT_V";
            #binding-cells = <0>;
            bindings = <&kp LC(B) &kp V>;
        };
        split_h: split_h {
            compatible = "zmk,behavior-macro";
            label = "SPLIT_H";
            #binding-cells = <0>;
            bindings = <&kp LC(B) &kp S>;
        };
    };

    behaviors {
        a_tab: a_tab {
            compatible = "zmk,behavior-tap-dance";
            label = "A_TAB";
            #binding-cells = <0>;
            tapping-term-ms = <150>;
            bindings =
                <&kp A>,
                <&kp TAB>;
        };
        quote: quote {
            compatible = "zmk,behavior-tap-dance";
            label = "QUOTE";
            #binding-cells = <0>;
            bindings =
                <&kp SQT>,
                <&kp DOUBLE_QUOTES>,
                <&kp GRAVE>;
        };
    };

    combos {
        compatible = "zmk,combos";

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <16 19>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &kp Q   &kp W  &kp E                &kp R  &kp T               &kp Y                   &kp U  &kp I                       &kp O    &kp P     &none
&none  &a_tab  &kp S  &kp D                &kp F  &kp G               &kp H                   &kp J  &kp K                       &kp L    &kp SEMI  &none
&none  &kp Z   &kp X  &kp C                &kp V  &kp B               &kp N                   &kp M  &kp COMMA                   &kp DOT  &kp FSLH  &none
                      &mt LEFT_ALT ESCAPE  &mo 1  &mt LSHIFT SPACE    &mt LEFT_CONTROL ENTER  &mo 2  &mt LEFT_COMMAND BACKSPACE
            >;
        };

        num_dir {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &split_h       &kp TAB         &kp UP_ARROW  &kp N4     &kp PAGE_UP      &kp PLUS   &kp N1  &kp N2         &kp N3  &kp ASTERISK  &none
&none  &split_V       &kp LEFT_ARROW  &kp DOWN      &kp RIGHT  &kp PAGE_DOWN    &kp MINUS  &kp N4  &kp N5         &kp N6  &kp SLASH     &none
&none  &kp LC(RG(Q))  &none           &none         &none      &none            &kp DOT    &kp N7  &kp N8         &kp N9  &kp N0        &none
                                      &kp LGUI      &none      &kp SPACE        &kp RET    &mo 3   &kp BACKSPACE
            >;

            label = "1";
        };

        char {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp GRAVE          &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LPAR  &kp RPAR  &none
&none  &none     &none   &none     &none     &none        &quote             &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp RBKT  &kp BSLH  &none
&none  &none     &none   &none     &none     &none        &kp DOUBLE_QUOTES  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp RBRC  &kp PIPE  &none
                         &kp LGUI  &none     &kp SPACE    &kp RET            &none                 &kp RALT
            >;

            label = "2";
        };

        short_Cuts {
            bindings = <
&none  &none          &none  &none  &none  &none    &none  &none  &none  &none  &none  &none
&none  &none          &none  &none  &none  &none    &none  &none  &none  &none  &none  &none
&none  &kp C_AL_LOCK  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none
                             &none  &none  &none    &none  &none  &none
            >;
        };
    };
};
