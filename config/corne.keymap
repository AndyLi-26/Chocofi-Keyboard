/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/*&mt {
    bindings =
        <&mo>,
        <&kp>;
};*/

/ {
    macros {
        split_V: split_V {
            compatible = "zmk,behavior-macro";
            label = "SPLIT_V";
            #binding-cells = <0>;
            bindings = <&kp LC(B) &kp V>;
        };
        split_h: split_h {
            compatible = "zmk,behavior-macro";
            label = "SPLIT_H";
            #binding-cells = <0>;
            bindings = <&kp LC(B) &kp S>;
        };
        vim_write: vim_write {
            compatible = "zmk,behavior-macro";
            label = "VIM_WRITE";
            #binding-cells = <0>;
            bindings = <&kp COLON &kp W>;
        };
        vim_quit: vim_quit {
            compatible = "zmk,behavior-macro";
            label = "VIM_QUIT";
            #binding-cells = <0>;
            bindings = <&kp COLON &kp Q>;
        };
    };

    behaviors {
        a_tab: a_tab {
            compatible = "zmk,behavior-tap-dance";
            label = "A_TAB";
            #binding-cells = <0>;
            tapping-term-ms = <150>;
            bindings =
                <&kp A>,
                <&kp TAB>;
        };
        quote: quote {
            compatible = "zmk,behavior-tap-dance";
            label = "QUOTE";
            #binding-cells = <0>;
            bindings =
                <&kp SQT>,
                <&kp DOUBLE_QUOTES>,
                <&kp GRAVE>;
        };
        bracketL: bracketL {
            compatible = "zmk,behavior-tap-dance";
            label = "BRACKETL";
            #binding-cells = <0>;
            bindings =
                <&kp LEFT_PARENTHESIS>,
                <&kp LEFT_BRACKET>,
                <&kp LEFT_BRACE>;
        };
        bracketR: bracketR {
            compatible = "zmk,behavior-tap-dance";
            label = "BRACKETR";
            #binding-cells = <0>;
            bindings =
                <&kp RIGHT_PARENTHESIS>,
                <&kp RIGHT_BRACKET>,
                <&kp RIGHT_BRACE>;
        };
        w: w {
            compatible = "zmk,behavior-tap-dance";
            label = "W";
            #binding-cells = <0>;
            bindings =
                <&kp W>,
                <&vim_write>;
        };
        q: q {
            compatible = "zmk,behavior-tap-dance";
            label = "Q";
            #binding-cells = <0>;
            bindings =
                <&kp Q>,
                <&vim_quit>;
        };
    };

    combos {
        compatible = "zmk,combos";

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <16 19>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&none  &q            &w                  &kp E                &kp R  &kp T        &kp Y      &kp U  &kp I                &kp O                     &kp P             &none
&none  &a_tab        &kp S               &kp D                &kp F  &kp G        &kp H      &kp J  &kp K                &kp L                     &kp SEMI          &none
&none  &mt LSHIFT Z  &mt LEFT_CONTROL X  &mt LEFT_GUI C       &kp V  &kp B        &kp N      &kp M  &mt RIGHT_GUI COMMA  &mt RIGHT_CONTROL PERIOD  &mt RSHIFT SLASH  &none
                                         &mt LEFT_ALT ESCAPE  &mo 1  &kp SPACE    &kp ENTER  &mo 2  &kp BACKSPACE
            >;
        };

        num_dir {
            bindings = <
&none  &split_h       &kp TAB         &kp UP_ARROW  &kp N4     &kp PAGE_UP      &kp PLUS   &kp N1  &kp N2         &kp N3  &kp ASTERISK  &none
&none  &split_V       &kp LEFT_ARROW  &kp DOWN      &kp RIGHT  &kp PAGE_DOWN    &kp MINUS  &kp N4  &kp N5         &kp N6  &kp SLASH     &none
&none  &kp LC(RG(Q))  &kp HOME        &kp LG(TAB)   &kp END    &none            &kp DOT    &kp N7  &kp N8         &kp N9  &kp N0        &none
                                      &kp LGUI      &none      &kp SPACE        &kp RET    &mo 3   &kp BACKSPACE
            >;

            label = "1";
        };

        char {
            bindings = <
&none  &none  &none  &kp AMPERSAND  &kp EXCLAMATION  &kp PRCNT     &kp GRAVE          &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp BSLH   &none  &none
&none  &none  &none  &kp PIPE       &kp TILDE        &kp HASH      &kp APOS           &kp LBKT              &kp RBKT               &kp MINUS  &none  &none
&none  &none  &none  &kp LCTRL      &kp AT_SIGN      &kp DOLLAR    &kp DOUBLE_QUOTES  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp FSLH   &none  &none
                     &kp LGUI       &none            &kp SPACE     &kp RET            &none                 &kp RALT
            >;

            label = "2";
        };

        short_Cuts {
            bindings = <
&none  &kp LC(LG(F))  &none               &none  &kp LG(LS(R))  &none    &kp C_VOLUME_UP    &kp C_REWIND        &none  &none  &none  &none
&none  &kp LC(LG(A))  &kp LC(LEFT_ARROW)  &none  &kp LC(RIGHT)  &none    &kp K_MUTE         &kp C_PLAY_PAUSE    &none  &none  &none  &none
&none  &kp LC(LG(Q))  &none               &none  &none          &none    &kp C_VOLUME_DOWN  &kp C_FAST_FORWARD  &none  &none  &none  &none
                                          &none  &none          &none    &none              &none               &none
            >;
        };
    };
};
